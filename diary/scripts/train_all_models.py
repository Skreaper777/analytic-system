import os
import joblib
import logging
from datetime import date

from diary.ml_utils.utils import get_diary_dataframe
from diary.ml_utils.base_model import train_model

logger = logging.getLogger("train_all")
logging.basicConfig(level=logging.INFO)

MODEL_DIR = os.path.join("diary", "trained_models", "base")
os.makedirs(MODEL_DIR, exist_ok=True)


def main():
    logger.info("üü° –°—Ç–∞—Ä—Ç –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π...")
    logger.info("üìÑ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: %s", ", ".join(df.columns))
    logger.info("üìÜ –î–∞—Ç—ã –≤ –æ–±—É—á–µ–Ω–∏–∏: –æ—Ç %s –¥–æ %s", df["date"].min(), df["date"].max())

    df = get_diary_dataframe()

    today = date.today()
    df = df[df["date"] < today]

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –º–æ–¥–µ–ª–µ–π
    for file in os.listdir(MODEL_DIR):
        if file.endswith(".pkl"):
            os.remove(os.path.join(MODEL_DIR, file))
    logger.info("–£–¥–∞–ª–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –º–æ–¥–µ–ª–∏ –ø–µ—Ä–µ–¥ –æ–±—É—á–µ–Ω–∏–µ–º.")

    df = get_diary_dataframe()

    today = date.today()
    df = df[df["date"] < today]

    logger.info("–ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –ø–æ %d –¥–Ω—è–º...", len(df))

    for target in df.columns:
        if target in ("date", "–î–∞—Ç–∞"):
            continue
        result = train_model(df.copy(), target=target, exclude=[])
        model = result.get("model")
        if model:
            file_path = os.path.join(MODEL_DIR, f"{target}.pkl")
            joblib.dump(model, file_path)
            logger.info("–û–±—É—á–µ–Ω–æ: %s ‚Üí %s", target, file_path)
        else:
            logger.warning("–ü—Ä–æ–ø—É—â–µ–Ω–æ: %s ‚Äî –º–æ–¥–µ–ª—å –Ω–µ –æ–±—É—á–µ–Ω–∞ (–ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –Ω–µ—Ç)", target)


if __name__ == "__main__":
    main()
