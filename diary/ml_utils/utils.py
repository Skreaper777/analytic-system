# diary/ml_utils/utils.py
import pandas as pd
import logging
from diary.models import Entry, EntryValue, Parameter

def get_diary_dataframe():
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –∑–∞–ø–∏—Å–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞ –≤ –≤–∏–¥–µ pandas DataFrame, –≥–¥–µ —Å—Ç—Ä–æ–∫–∏ ‚Äî —ç—Ç–æ –¥–∞—Ç—ã,
    –∞ —Å—Ç–æ–ª–±—Ü—ã ‚Äî –∏–º–µ–Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º). –ó–Ω–∞—á–µ–Ω–∏—è ‚Äî —á–∏—Å–ª–æ–≤—ã–µ.
    """
    entries = Entry.objects.all().order_by('date')
    parameters = Parameter.objects.filter(active=True)
    id_to_name = {p.id: p.name_ru for p in parameters}

    data = []
    for entry in entries:
        row = {'date': entry.date}
        values = EntryValue.objects.filter(entry=entry)
        for ev in values:
            name = id_to_name.get(ev.parameter_id)
            if name:
                row[name] = ev.value
        data.append(row)

    df = pd.DataFrame(data)
    df = df.fillna(0.0)

    logger = logging.getLogger('diary.ml_utils.utils')
    logger.debug(f"üßû DataFrame head used for training:\n{df.head(10).to_string()}")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    df.to_excel("debug_diary_dataframe.xlsx", index=False)

    return df
